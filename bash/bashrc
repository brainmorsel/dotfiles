#
# ~/.bashrc
#

source $HOME/.config/profile

# If not running interactively, don't do anything
[[ $- != *i* ]] && return

### ============================================================================
###  BASE SHELL CONFIGURATION
### ============================================================================

eval `dircolors $HOME/.config/dircolors-solarized.256dark`

# SSH Keys Agent
# https://github.com/vodik/envoy
envoy --agent=ssh-agent --defer
source <(envoy -p --defer)

# http://uggedal.com/journal/lazy-ssh-add/
_ssh_add() {
    [ "$SSH_CONNECTION" ] && return

    local key=$HOME/.ssh/id_rsa

    ssh-add -l >/dev/null || ssh-add $key
}

ssh() {
    _ssh_add
    command ssh "$@"
}

scp() {
    _ssh_add
    command scp "$@"
}

git() {
    case $1 in
        push|pull|fetch)
            _ssh_add
            ;;
    esac

    command git "$@"
}

command -v npm >/dev/null 2>&1 && . <(npm completion)

bash_rc_dir=$(dirname `readlink -f $HOME/.bashrc`)
[[ -f ${bash_rc_dir}/cd_fuzzy_path_finder.sh ]] && . ${bash_rc_dir}/cd_fuzzy_path_finder.sh
[[ -f ${bash_rc_dir}/promptline.sh ]] && . ${bash_rc_dir}/promptline.sh
#[[ -f ${bash_rc_dir}/fancy_prompt.sh ]] && . ${bash_rc_dir}/fancy_prompt.sh
[[ -f ${bash_rc_dir}/bash_aliases ]] && . ${bash_rc_dir}/bash_aliases

[[ -f /usr/share/git/completion/git-completion.bash ]] && . /usr/share/git/completion/git-completion.bash
[[ -f /usr/share/git/completion/git-prompt.sh ]] && . /usr/share/git/completion/git-prompt.sh
GIT_PS1_SHOWDIRTYSTATE="yes"

[[ -f /usr/bin/virtualenvwrapper.sh ]] && . /usr/bin/virtualenvwrapper.sh

# don't put duplicate lines in the history. See bash(1) for more options
# ... or force ignoredups and ignorespace
HISTCONTROL=ignoredups:ignorespace

HISTIGNORE=":l[sal]:ll[la]:[bf]g:exit"
HISTTIMEFORMAT="%Y-%m-%d %T "
HISTSIZE=-1
HISTFILE=~/.cache/bash_history
HISTFILESIZE=2000

# append to the history file, don't overwrite it
shopt -s histappend

# multi-line commands are stored in the history as a single command
shopt -s cmdhist

# readline config
bind '"\e[A":history-search-backward'
bind '"\e[B":history-search-forward'
bind 'set show-all-if-ambiguous on'
bind 'set show-all-if-unmodified on'
bind 'set echo-control-characters off'
bind 'set completion-ignore-case on'
bind 'set colored-stats on'
bind 'set visible-stats on'
bind 'set mark-symlinked-directories on'
bind 'set colored-completion-prefix on'
bind 'set menu-complete-display-prefix on'
#bind 'TAB:menu-complete'

# set tabsize to 4
#tabs -4

shopt -s autocd
shopt -s cdspell

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

check_cursor_pos ()
{
    # http://habrahabr.ru/company/mailru/blog/145008/
    # get cursor position and add new line if we're not in first column
    #exec < /dev/tty
    #local OLDSTTY=$(stty -g)
    #stty raw -echo min 0
    #echo -en "\033[6n" > /dev/tty && read -sdR CURPOS
    #stty $OLDSTTY
    #[[ ${CURPOS##*;} -gt 1 ]] && echo -e "\e[0;31m↵\e[0m"
    echo -en "\033[6n" && read -sdR CURPOS
    [[ ${CURPOS##*;} -gt 1 ]] && echo -e "\e[0;31m↵\e[0m"
}

# Red STDERR
# rse <command string>
rse ()
{
	{ "$@" 2>&1>&3|sed 's,.*,\x1B[31m&\x1B[0m,'>&2; } 3>&1
}
complete -cf rse

r ()
{
	RED="\e[1;31;40m"
	RST="\e[0m"
	echo -en "${RED}remove ${#@} items${RST}: $@\n\nY/n? "
	while read -r -n1 char
	do
		if [ "$char" == "Y" ] ; then
			echo
			/bin/rm -r "$@"
			echo done
			break
		elif [ "$char" == "y" ] ; then
			echo -en '\r(type "Y" not "y") Y/n? '
		else
			echo
			echo cancel
			break
		fi
	done
}

catWithSep() { sep="$1"; shift; first=''; for f; do test -n "$first" && echo "$sep"; cat "$f"; first=no; done; }

#..() { cd $(seq 1 $(( ${#1} + 1 )) | sed 's/.*/../' | tr '\n' '/'); }

killmenu() {
	if [[ "$1" =~ -[0-9]+ ]] ; then
		killsig=$1
		shift
	fi
	IFS=$'\n'
	printf "   %s\n" "$(ps -ef | head -n1)"
	list=(`ps -ef | grep "$@"`)
	select line in "${list[@]}" ; do
		if [ $(echo "$line" | awk '{print $1}') != $(whoami) ] ; then
			sudo=sudo
		fi
		$sudo kill $killsig $(echo "$line" | awk '{print $2}')
		break
	done
}

edit()
{
    $EDITOR "$@"
}
